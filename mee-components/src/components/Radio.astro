---
interface Props {
  className?: string;
  label?: string;
  name?: string;
  id?: string;
  disabled?: boolean;
  checked?: boolean;
}

const { className, id, disabled, checked = false, name, label } = Astro.props;
---

<div class:list={["mb-[0.125rem] block min-h-[1.5rem] ps-[1.5rem]", className]}>
  <input
    class:list={[
      "peer relative float-left -ms-[1.5rem] me-1 mt-0.5 h-5 w-5 appearance-none rounded-full border-2 border-solid border-gray-400",
      "hover:cursor-pointer hover:before:opacity-[0.04]",
      "before:pointer-events-none before:absolute before:h-4 before:w-4 before:scale-0 before:rounded-full before:bg-transparent before:opacity-0 before:content-['']",
      "after:absolute after:z-[1] after:block after:h-4 after:w-4 after:rounded-full after:content-['']",
      "checked:border-brand-800 checked:before:opacity-[0.16] checked:after:absolute checked:after:left-1/2 checked:after:top-1/2 checked:after:h-[0.625rem] checked:after:w-[0.625rem] checked:after:rounded-full checked:after:border-brand-800 checked:after:bg-brand-700 checked:after:content-[''] checked:after:[transform:translate(-50%,-50%)] checked:focus:before:shadow-button",
      "focus:outline-none focus:ring-0 focus:before:scale-100 focus:before:transition-[box-shadow_0.2s,transform_0.2s] checked:focus:shadow-button checked:focus:before:scale-100 checked:focus:before:transition-[box-shadow_0.2s,transform_0.2s]",
      "disabled:opacity-35",
    ]}
    type="radio"
    checked={checked}
    disabled={disabled}
    name={name}
    id={id}
  />
  <label class="hover:cursor-pointer peer-disabled:opacity-35" for={id}>
    {label}
  </label>
</div>
