---
import { Button, MeeLogo, Avatar } from "mee-components";

export interface Props {
  activePage?: string;
  logoColor?: "blue" | "white";
}

const { activePage, logoColor = "blue" } = Astro.props;
---

<header id="header" class="fixed top-0 z-10 w-screen">
  <nav class="h-23 border-b border-solid border-b-gray-200 bg-white">
    <div
      class="mx-auto flex h-full max-w-480 flex-wrap items-center justify-between px-6"
    >
      <a
        href="/"
        id="mainLogo"
        class:list={[
          "logo block h-5 w-17.25 pt-1.5 md:h-6 md:w-20 md:pt-0",
          { "logo--contrast": logoColor === "blue" },
        ]}
      >
        <MeeLogo />
      </a>
      <div id="profile" class="hidden">
        <div
          class="flex h-11 flex-row items-center rounded-xl border border-solid border-gray-300 bg-gray-50 p-0"
        >
          <div
            class="flex h-full flex-row items-center justify-center gap-4 border-r border-solid border-gray-300 px-4 py-2.5"
          >
            <Avatar size="sm" id="profile-image-preview" isActive={true} />
            <p>Profile</p>
          </div>
          <div
            class="flex h-full cursor-pointer flex-row items-center justify-center px-4 py-2.5 transition-all data-[active]:rotate-180"
            id="open-profile-modal"
          >
            <i class="bi bi-chevron-down text-2xl"></i>
          </div>
        </div>
      </div>
      <div id="menu">
        <button
          id="menu-toggle"
          type="button"
          class="inline-flex h-10 w-10 items-center justify-center rounded-lg p-2 text-sm text-gray-500 transition-all hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 md:hidden"
        >
          <span class="sr-only">Open main menu</span>
          <svg
            class="h-5 w-5"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 17 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M1 1h15M1 7h15M1 13h15"></path>
          </svg>
        </button>

        <div class="hidden w-full md:block md:w-auto" id="navbar">
          <ul
            class="mt-4 flex flex-col rounded-lg border border-gray-100 bg-gray-50 p-4 font-medium md:mt-0 md:flex-row md:space-x-8 md:border-0 md:bg-white md:p-0"
          >
            <li>
              <a
                href="/sign-up"
                class:list={[
                  "block rounded px-3 py-2 text-gray-900 hover:text-primary md:border-0 md:p-0",
                  activePage === "sign-up" && "text-primary",
                ]}>Join</a
              >
            </li>
            <li>
              <a
                href="/sign-in"
                class:list={[
                  "block rounded px-3 py-2 text-gray-900 hover:text-primary md:border-0 md:p-0",
                  activePage === "sign-in" && "text-primary",
                ]}
                aria-current="page">Log in</a
              >
            </li>
          </ul>
        </div>
      </div>
    </div>
  </nav>
  <div
    class="absolute right-4 top-20 z-100 hidden flex-col items-start rounded-lg border border-solid border-brand-300 bg-white p-0 shadow-2"
    id="profile-modal"
  >
    <div
      class="flex flex-col items-center gap-4 rounded-t-lg border-b border-brand-300 bg-brand-50 px-6 py-8"
    >
      <div class="flex flex-col items-center gap-2 p-0">
        <Avatar size="xl" id="profile-image" isActive={true} />
        <div class="flex flex-col items-center p-0">
          <p class="text-center text-sm leading-5 tracking-0.02 text-gray-700">
            Current profile
          </p>
          <p
            class="text-center text-xl font-semibold tracking-0.02 text-gray-900"
            id="profile-name"
          >
          </p>
        </div>
      </div>
      <div>
        <Button
          id="edit-profile"
          type="button"
          buttonType="primary"
          style="outlined">Edit profile</Button
        >
      </div>
    </div>
    <div class="w-full border-b border-gray-300 text-gray-800">
      <div
        class="flex h-14 cursor-pointer flex-row items-center gap-2 px-6 py-4 hover:bg-gray-100"
      >
        <div><i class="bi bi-gear text-xl"></i></div>Settings
      </div>
      <div
        class="flex h-14 cursor-pointer flex-row items-center gap-2 px-6 py-4 hover:bg-gray-100"
      >
        <div><i class="bi bi-send text-xl"></i></div>Send Feedback
      </div>
    </div>
    <div class="w-full border-b-gray-300 text-gray-800">
      <div
        class="flex h-14 cursor-pointer flex-row items-center gap-2 rounded-b-lg px-6 py-4 hover:bg-gray-100"
      >
        <div><i class="bi bi-box-arrow-left text-xl"></i></div>Sign out
      </div>
    </div>
  </div>
</header>

<script>
  import { AvatarHelper } from "mee-components";
  const menuToggle = document.getElementById("menu-toggle");
  const profile = document.getElementById("profile");
  let isProfileModalOpened = false;
  const profileModal = document.getElementById("profile-modal");
  const profileName = document.getElementById("profile-name");
  const openProfileModal = document.getElementById("open-profile-modal");
  const menu = document.getElementById("menu");
  const navbar = document.getElementById("navbar");
  const onButtonClick = () => {
    if (navbar?.classList.contains("hidden")) {
      navbar?.classList.remove("hidden");
    } else {
      navbar?.classList.add("hidden");
    }
  };
  document.addEventListener("click", (e) => {
    const target = e.target as HTMLElement;
    if (!target.closest("#profile-modal") && isProfileModalOpened) {
      toggleProfile();
    }
  });
  menuToggle?.addEventListener("click", onButtonClick);
  const toggleProfile = () => {
    if (isProfileModalOpened) {
      openProfileModal && delete openProfileModal.dataset.active;

      profileModal?.classList.remove("flex");
      profileModal?.classList.add("hidden");
    } else {
      openProfileModal && (openProfileModal.dataset.active = "true");
      profileModal?.classList.remove("hidden");
      profileModal?.classList.add("flex");
    }

    isProfileModalOpened = !isProfileModalOpened;
  };
  openProfileModal?.addEventListener("click", (e) => {
    e.preventDefault();
    e.stopPropagation();
    toggleProfile();
  });
  const response = await fetch("https://randomuser.me/api");
  const data = await response.json();
 
  const randomUser = data.results[0];
  if (randomUser) {
    profile?.classList.remove("hidden");
    menu?.classList.add("hidden");
    if (profileName) {
      profileName.innerHTML = randomUser.email;
    }
    AvatarHelper.setAvatar(
      "profile-image-preview",
      `${randomUser.name.first} ${randomUser.name.last}`,
      randomUser.picture.medium,
    );
    AvatarHelper.setAvatar(
      "profile-image",
      `${randomUser.name.first} ${randomUser.name.last}`,
      randomUser.picture.medium,
    );
  }
</script>
