<article class="typing-logo my-4 hidden h-16 items-baseline lg:flex">
  <img
    src="./images/logo-m.svg"
    width="91"
    height="64"
    class="flex flex-shrink-0"
  />
  <img
    src="./images/logo-e.svg"
    width="64"
    height="64"
    class="flex flex-shrink-0"
  />
  <img
    src="./images/logo-e.svg"
    id="mirror-e"
    width="64"
    height="64"
    class="img-filter flex flex-shrink-0 -scale-x-100"
  />
  <div class="flex h-full items-center">
    <p></p>
    <p
      class="-mt-5 flex h-full gap-0 text-[112px] leading-[0px] text-brand-300"
      id="logo-wording-opacity"
    >
    </p>
  </div>
</article>

<script>
  const electronicallyText = "lectronically";
  const exclusivelyText = "xclusively";
  const logoWordingsOpacity = document.getElementById("logo-wording-opacity");
  const mirrorE = document.getElementById("mirror-e");
  const typingLogo = document.querySelector(".typing-logo");

  let j = 0;
  let speed = 90;
  let startAnimation = false;
  let typeWriterOpacityTimeout: NodeJS.Timeout;
  let removeWrittenTextOpacityTimeout: NodeJS.Timeout;
  let removeWrittenTextOpacityTimeout2: NodeJS.Timeout;

  function typeWriterOpacity(text: string) {
    if (j < text.length) {
      const wordSpan = document.createElement("span");
      wordSpan.classList.add("anim-fade-in");
      wordSpan.appendChild(document.createTextNode(text.charAt(j)));
      logoWordingsOpacity?.appendChild(wordSpan);
      j++;
      typeWriterOpacityTimeout = setTimeout(
        () => typeWriterOpacity(text),
        speed
      );
    }
  }

  function removeWrittenTextOpacity(callback?: () => void) {
    if (j > 0) {
      if (logoWordingsOpacity && logoWordingsOpacity.lastChild) {
        logoWordingsOpacity.removeChild(logoWordingsOpacity.lastChild);
      }
      j--;
      removeWrittenTextOpacityTimeout = setTimeout(() => {
        removeWrittenTextOpacity(callback);
      }, speed / 3);
    } else if (callback) {
      j = 0;
      callback();
    }
  }

  function stopAnimation() {
    mirrorE?.classList.remove("anim-mirror");
    clearTimeout(typeWriterOpacityTimeout);
    clearTimeout(removeWrittenTextOpacityTimeout);
    clearTimeout(removeWrittenTextOpacityTimeout2);

    if (logoWordingsOpacity) {
      logoWordingsOpacity.innerHTML = "";
    }
    j = 0;
    startAnimation = false;
  }

  const observerTypingLogo = new IntersectionObserver(
    (entries, _) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          if (!startAnimation) {
            mirrorE?.classList.add("anim-mirror");
            typeWriterOpacityTimeout = setTimeout(
              () => typeWriterOpacity(electronicallyText),
              1050
            );
            removeWrittenTextOpacityTimeout = setTimeout(() => {
              removeWrittenTextOpacity(() => {
                typeWriterOpacity(exclusivelyText);
              });
            }, 3500);

            removeWrittenTextOpacityTimeout2 = setTimeout(
              removeWrittenTextOpacity,
              7100
            );
            startAnimation = true;
          }
        } else {
          stopAnimation();
        }
      });
    },
    { threshold: 1 }
  );

  if (typingLogo) observerTypingLogo.observe(typingLogo);
</script>

<style>
  .img-filter {
    filter: brightness(0) saturate(100%) invert(81%) sepia(20%) saturate(350%)
      hue-rotate(137deg) brightness(91%) contrast(85%);
  }

  .anim-mirror {
    animation: 7000ms linear 0.8s both mirror;
  }

  @keyframes mirror {
    0% {
      transform: scaleX(-1);
      filter: brightness(0) saturate(100%) invert(47%) sepia(57%) saturate(304%)
        hue-rotate(140deg) brightness(90%) contrast(81%);
    }
    3% {
      transform: scaleX(1);
      filter: brightness(0) saturate(100%) invert(81%) sepia(20%) saturate(350%)
        hue-rotate(137deg) brightness(91%) contrast(85%);
    }
    96% {
      transform: scaleX(1);
      filter: brightness(0) saturate(100%) invert(81%) sepia(20%) saturate(350%)
        hue-rotate(137deg) brightness(91%) contrast(85%);
    }
    100% {
      transform: scaleX(-1);
      filter: brightness(0) saturate(100%) invert(47%) sepia(57%) saturate(304%)
        hue-rotate(140deg) brightness(90%) contrast(81%);
    }
  }
</style>
