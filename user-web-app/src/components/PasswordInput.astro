---
import EyeIcon from "@components/icons/EyeIcon.astro";
import EyeSlashIcon from "@components/icons/EyeSlashIcon.astro";

interface Props {
  className?: string;
  id: string;
  label: string;
  required?: boolean;
  placeholder?: string;
  autocomplete?: string;
  pattern?: string;
  showRestorePassword?: boolean;
}

const {
  className,
  id,
  label,
  required = false,
  placeholder,
  autocomplete,
  pattern,
  showRestorePassword,
} = Astro.props;
---

<div class:list={["password-input relative", className]}>
  <input
    type="password"
    id={id}
    class="border-secondary-500 peer m-0 block h-14 w-full rounded-lg border border-primary bg-white px-4 py-2.5 text-base font-normal leading-6 tracking-0.02 text-[#1E293B] transition duration-200 ease-linear placeholder:text-transparent focus:pb-[0.625rem] focus:pt-[1.625rem] focus:ring-1 focus:ring-primary [&:not(:placeholder-shown)]:pb-[0.625rem] [&:not(:placeholder-shown)]:pt-[1.625rem]"
    required={required}
    placeholder={placeholder}
    autocomplete={autocomplete}
    pattern={pattern}
  />
  <label
    for={id}
    class="pointer-events-none absolute left-0 top-0 origin-[0_0] border border-solid border-transparent px-3 py-4 text-primary transition-[opacity,_transform] duration-200 ease-linear peer-focus:-translate-y-2 peer-focus:translate-x-[0.15rem] peer-focus:scale-[0.85] peer-focus:text-primary peer-[:not(:placeholder-shown)]:-translate-y-2 peer-[:not(:placeholder-shown)]:translate-x-[0.15rem] peer-[:not(:placeholder-shown)]:scale-[0.85] motion-reduce:transition-none"
    >{label}</label
  >
  <div class="eye-container absolute right-4 top-5 cursor-pointer fill-primary">
    <div class="eye"><EyeIcon /></div><div class="eye hidden">
      <EyeSlashIcon />
    </div>
  </div>
  <div class="mt-0.5 flex justify-between">
    <div
      class="validation-message hidden gap-x-0.5 whitespace-pre-line text-wrap text-xs text-red-600"
    >
    </div>
    <div></div>
    {
      showRestorePassword && (
        <a
          href="/forgot-password"
          class="text-xs leading-4 tracking-0.02 text-[#3B5B63] underline"
        >
          Forgot password
        </a>
      )
    }
  </div>
</div>
<script>
  const inputContainers = document.querySelectorAll(".password-input");
  inputContainers.forEach((inputContainer) => {
    const eyeContainer = inputContainer.querySelector(".eye-container");
    eyeContainer?.addEventListener("click", () => {
      const eyes = inputContainer.querySelectorAll(".eye");
      const input = inputContainer.querySelector("input");
      if (input) {
        input.type = input.type === "password" ? "text" : "password";
      }
      eyes.forEach((eye) => {
        eye.classList.toggle("hidden");
      });
    });
  });
</script>
