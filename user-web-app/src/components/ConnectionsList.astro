---
import { Button, Loading, Input, Avatar } from "mee-components";
---

<main class="flex h-full min-h-screen p-6">
  <article
    class="flex h-full w-full max-w-480 flex-1 flex-col items-start justify-start gap-6"
  >
    <div
      class="flex w-full flex-col flex-wrap items-center justify-between gap-6 text-base font-semibold lg:flex-row"
    >
      <div
        class="order-2 flex flex-wrap items-center gap-4 self-start lg:order-none"
      >
        <Input
          id="search"
          label="Search apps"
          className="!w-80"
          labelPosition="inside"
          autocomplete="off"
          leftIcon="search"
          required
        />
        <div>
          <Button
            id="filter"
            type="button"
            buttonType="primary"
            style="outlined"
            size="l"
            className="w-64">Filter</Button
          >
        </div>
      </div>
      <div
        class="order-1 float-right flex w-full flex-shrink-0 flex-row justify-between gap-4 lg:order-none lg:w-auto"
      >
        <div class="">
          <Button
            id="add-connection"
            type="button"
            className="w-auto px-4"
            leftIcon="plus-lg text-xl"
            ><span class="hidden sm:block">Add connection</span></Button
          >
        </div>
        <div id="profile" class="self-end">
          <div
            class="flex h-11 flex-row items-center rounded-xl border border-solid border-gray-300 bg-gray-50 p-0"
          >
            <div
              class="flex h-full flex-row items-center justify-center gap-4 border-r border-solid border-gray-300 px-4"
            >
              <Avatar size="sm" id="profile-image-preview" isActive={true} />
              <p>Profile</p>
            </div>
            <div
              class="flex h-full cursor-pointer flex-row items-center justify-center px-4 transition-all data-[active]:rotate-180"
              id="open-profile-modal"
            >
              <i class="bi bi-chevron-down text-2xl"></i>
            </div>
          </div>
        </div>
      </div>
      <div
        class="absolute right-4 top-20 z-100 hidden flex-col items-start rounded-lg border border-solid border-brand-300 bg-white p-0 shadow-2"
        id="profile-modal"
      >
        <div
          class="flex flex-col items-center gap-4 rounded-t-lg border-b border-brand-300 bg-brand-50 px-6 py-8"
        >
          <div class="flex flex-col items-center gap-2 p-0">
            <Avatar size="xl" id="profile-image" isActive={true} />
            <div class="flex flex-col items-center p-0">
              <p
                class="text-center text-sm leading-5 tracking-0.02 text-gray-700"
              >
                Current profile
              </p>
              <p
                class="text-center text-xl font-semibold tracking-0.02 text-gray-900"
                id="profile-name"
              >
              </p>
            </div>
          </div>
          <div>
            <Button
              id="edit-profile"
              type="button"
              buttonType="primary"
              style="outlined">Edit profile</Button
            >
          </div>
        </div>
        <div class="w-full border-b border-gray-300 text-gray-800">
          <div
            class="flex h-14 cursor-pointer flex-row items-center gap-2 px-6 py-4 hover:bg-gray-100"
          >
            <div><i class="bi bi-gear text-xl"></i></div>Settings
          </div>
          <div
            class="flex h-14 cursor-pointer flex-row items-center gap-2 px-6 py-4 hover:bg-gray-100"
          >
            <div><i class="bi bi-send text-xl"></i></div>Send Feedback
          </div>
        </div>
        <div class="w-full border-b-gray-300 text-gray-800">
          <div
            id="sign-out"
            class="flex h-14 cursor-pointer flex-row items-center gap-2 rounded-b-lg px-6 py-4 hover:bg-gray-100"
          >
            <div><i class="bi bi-box-arrow-left text-xl"></i></div>Sign out
          </div>
        </div>
      </div>
    </div>
    <Loading />
    <section
      class="flex w-full flex-col items-start rounded-xl border border-solid border-gray-300 bg-white text-gray-800"
      id="connections-container"
    >
    </section>
  </article>
</main>
<div class="hidden">
  <div class="flex rotate-90" id="arrow-right">
    <div class="flex rotate-180">
      <i class="bi bi-chevron-down text-2xl"></i>
    </div>
  </div>
</div>

<script>
  import { getCookie, deleteCookie } from "@utils/cookie";
  import type { Connection } from "@utils/types";
  import { getConnections, getUser } from "api/api";
  import { AvatarHelper, HashRouter } from "mee-components";

  const initConnections = async () => {
    const user = getCookie("user");
    if (!user) {
      window.location.hash = "#sign-in";
    }
    const addConnectionButton = document.getElementById("add-connection");
    const filterButton = document.getElementById("filter");
    const connectionsContainer = document.getElementById(
      "connections-container"
    );
    const arrowRight = document.getElementById("arrow-right");
    const signOutButton = document.getElementById("sign-out");
    const searchInput = document.getElementById(
      "search"
    ) as HTMLInputElement | null;
    let isProfileModalOpened = false;
    const profileModal = document.getElementById("profile-modal");
    const profileName = document.getElementById("profile-name");
    const openProfileModal = document.getElementById("open-profile-modal");
    const toggleProfile = () => {
      if (isProfileModalOpened) {
        openProfileModal && delete openProfileModal.dataset.active;

        profileModal?.classList.remove("flex");
        profileModal?.classList.add("hidden");
      } else {
        openProfileModal && (openProfileModal.dataset.active = "true");
        profileModal?.classList.remove("hidden");
        profileModal?.classList.add("flex");
      }

      isProfileModalOpened = !isProfileModalOpened;
    };
    openProfileModal?.addEventListener("click", (e) => {
      e.preventDefault();
      e.stopPropagation();
      toggleProfile();
    });
    signOutButton?.addEventListener("click", () => {
      deleteCookie("user");
      window.location.hash = "#sign-in";
    });
    document.addEventListener("click", (e) => {
      const target = e.target as HTMLElement;
      if (!target.closest("#profile-modal") && isProfileModalOpened) {
        toggleProfile();
      }
    });

    const randomUser = await getUser();
    if (randomUser) {
      if (profileName) {
        profileName.innerHTML = randomUser.email;
      }
      AvatarHelper.setAvatar(
        "profile-image-preview",
        `${randomUser.name.first} ${randomUser.name.last}`,
        randomUser.picture.medium
      );
      AvatarHelper.setAvatar(
        "profile-image",
        `${randomUser.name.first} ${randomUser.name.last}`,
        randomUser.picture.medium
      );
    }

    addConnectionButton?.addEventListener("click", () => {
      window.location.hash = "#create-connection";
    });

    const appendConnections = (connections: Connection[]) => {
      if (connectionsContainer && connections) {
        connectionsContainer.innerHTML = "";
        connections.forEach((connection, i: number) => {
          const connectionHash = "#connections/" + i;

          const div = document.createElement("div");
          div.className =
            "flex w-full flex-row items-center justify-between gap-6 border-b border-solid border-b-grey-200 p-6 last:border-b-0 gap-6 cursor-pointer";

          const divName = document.createElement("div");

          divName.className = "flex items-center gap-6";
          const divTitle = document.createElement("div");
          divTitle.className =
            "font-semibold text-base md:text-xl md:tracking-0.02";
          const divTitleContent = document.createTextNode(connection.name);
          divTitle.appendChild(divTitleContent);

          const img = document.createElement("img");
          img.className =
            "isolate flex h-16 w-16 flex-col items-center justify-center rounded-none p-0";
          img.src = connection.image_url || "/images/empty-logo.png";
          divName.appendChild(img);
          divName.appendChild(divTitle);

          const divActions = document.createElement("div");
          divActions.className = "flex items-end gap-4";

          const arrowRightIcon = arrowRight && arrowRight.cloneNode(true);

          const buttonRight = document.createElement("button");
          buttonRight.onclick = () => {
            window.location.hash = connectionHash;
          };
          arrowRightIcon && buttonRight.appendChild(arrowRightIcon);
          divActions.appendChild(buttonRight);
          div.appendChild(divName);
          div.appendChild(divActions);
          div.onclick = () => {
            window.location.hash = connectionHash;
          };
          connectionsContainer.appendChild(div);
        });
      }
    };

    const loading = document.getElementById("loading");

    const data = await getConnections();
    loading?.classList.add("hidden");
    appendConnections(data);

    const filterConnections = () => {
      const filterValue = searchInput?.value;

      if (filterValue) {
        const filterData = data.filter((item) =>
          item.name.toLowerCase().includes(filterValue.toLowerCase())
        );
        appendConnections(filterData);
      } else {
        appendConnections(data);
      }
    };

    filterButton?.addEventListener("click", filterConnections);
    searchInput?.addEventListener("change", filterConnections);
  };

  HashRouter.initPageListeners("connections", initConnections, "Connections");
</script>
